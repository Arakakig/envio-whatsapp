import fetch from 'node-fetch';

async function testServer() {
  console.log('Testando servidor...');
  
  try {
    // Teste 1: Verificar se o servidor est√° rodando
    console.log('1. Testando se o servidor est√° rodando...');
    const statusResponse = await fetch('http://localhost:3001/api/status');
    console.log('Status do servidor:', statusResponse.status);
    
    if (statusResponse.ok) {
      const statusData = await statusResponse.json();
      console.log('‚úÖ Servidor est√° rodando:', statusData);
    } else {
      console.log('‚ùå Servidor n√£o est√° respondendo corretamente');
      return;
    }
    
    // Teste 2: Verificar se a rota de usu√°rios internos existe (sem autentica√ß√£o)
    console.log('\n2. Testando rota de usu√°rios internos (sem auth)...');
    const usersResponse = await fetch('http://localhost:3001/api/internal/users');
    console.log('Status da rota de usu√°rios:', usersResponse.status);
    
    if (usersResponse.status === 401) {
      console.log('‚úÖ Rota existe, mas requer autentica√ß√£o (esperado)');
    } else if (usersResponse.status === 404) {
      console.log('‚ùå Rota n√£o encontrada');
      const text = await usersResponse.text();
      console.log('Resposta:', text.substring(0, 200));
    } else {
      console.log('‚ùå Status inesperado:', usersResponse.status);
      const text = await usersResponse.text();
      console.log('Resposta:', text.substring(0, 200));
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao testar servidor:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° O servidor n√£o est√° rodando. Execute: npm run dev');
    }
  }
}

testServer(); 